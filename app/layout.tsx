import { ThemeProvider } from "@/components/ui/theme-provider";
import "./globals.css";
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { ReduxProvider } from "./Redux/ReduxProvider";
import SessionProvider from "@/components/ui/Authentication/session-provider";
import { getServerSession } from "next-auth";
import { Navbar } from "@/components/ui/Layout/navbar";
import Tree from "@/components/ui/Layout/tree-view";
import { ScrollArea } from "@/components/ui/scroll-area";

const inter = Inter({ subsets: ["latin"] });

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const data = [
  { id: "1", name: "Unread" },
  { id: "2", name: "Threads" },
  { id: "1", name: "Unread" },
  { id: "2", name: "Threads" },
  { id: "1", name: "Unread" },
  { id: "2", name: "Threads" },
  {
    id: "3",
    name: "Chat Rooms",
    children: [
      { id: "c1", name: "General" },
      { id: "c2", name: "Random" },
      { id: "c3", name: "Open Source Projects" },
    ],
  },
  {
    id: "4",
    name: "Direct Messages",
    children: [
      {
        id: "d1",
        name: "Alice",
        children: [
          {
            id: "d1",
            name: "Alice2",
            children: [
              {
                id: "d1",
                name: "Alice",
                children: [
                  { id: "d1", name: "Alice2" },
                  { id: "d2", name: "Bob2" },
                  { id: "d3", name: "Charlie2" },
                ],
              },
              { id: "d2", name: "Bob" },
              { id: "d3", name: "Charlie" },
            ],
          },
          { id: "d2", name: "Bob2" },
          { id: "d3", name: "Charlie2" },
        ],
      },
      { id: "d2", name: "Bob" },
      { id: "d3", name: "Charlie" },
    ],
  },
];

export default async function RootLayout({ children }: { children: React.ReactNode }) {
  const session = await getServerSession();

  return (
    <html lang="en">
      <head />
      <body className="overflow-y-hidden">
        <SessionProvider session={session}>
          <ReduxProvider>
            <ThemeProvider attribute="class" defaultTheme="dark" enableSystem disableTransitionOnChange>
              <Navbar />
              <div className="flex flex-row mt-32">
                <div className="w-70">
                  <Tree data={data}></Tree>
                </div>
                <div className="container overflow-auto">{children}</div>
              </div>
            </ThemeProvider>
          </ReduxProvider>
        </SessionProvider>
      </body>
    </html>
  );
}
